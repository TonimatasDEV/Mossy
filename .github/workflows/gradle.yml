# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: Java CI with Gradle

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3.5.2

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: 17

      - name: Give permissions to Gradle
        run: chmod +x ./gradlew

      - name: Export jar with Gradle
        run: ./gradlew jar

      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v3.1.2
        with:
          name: Mossy
          path: build/libs/**.jar

      - name: Put Mossy jar in an archive
        working-directory: build/libs
        run: |
         tar -czf mossy.tar.gz mossy*.jar
         mv mossy.tar.gz ../../

      - name: Upload build artifact
        uses: actions/upload-artifact@v3
        with:
          name: mossy-jar
          path: |
            mossy.tar.gz

  test:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Setup Java 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Download build artifact
        uses: actions/download-artifact@v3
        with:
          name: mossy-jar
          path: .

      - name: Extract Mossy
        run: |
          tar -xvf mossy.tar.gz

      - name: Run
        timeout-minutes: 10
        run: echo "stop" | java -jar mossy*.jar